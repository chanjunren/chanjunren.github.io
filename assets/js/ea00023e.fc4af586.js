"use strict";(self.webpackChunkliangzai_for_hire=self.webpackChunkliangzai_for_hire||[]).push([[9427],{5680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>y});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(n),g=a,y=u["".concat(c,".").concat(g)]||u[g]||p[g]||i;return n?r.createElement(y,o(o({ref:t},s),{},{components:n})):r.createElement(y,o({ref:t},s))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5336:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(8168),a=(n(6540),n(5680));const i={sidebar_position:0,sidebar_label:"Introduction"},o="Introduction",l={unversionedId:"Backend/Database/Relational DB/Indexing/intro",id:"Backend/Database/Relational DB/Indexing/intro",title:"Introduction",description:"What is Indexing?",source:"@site/docs/Backend/Database/Relational DB/Indexing/intro.md",sourceDirName:"Backend/Database/Relational DB/Indexing",slug:"/Backend/Database/Relational DB/Indexing/intro",permalink:"/docs/Backend/Database/Relational DB/Indexing/intro",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,sidebar_label:"Introduction"},sidebar:"docs",previous:{title:"Indexing",permalink:"/docs/Backend/Database/Relational DB/Indexing/"},next:{title:"Disk structure",permalink:"/docs/Backend/Database/Relational DB/Indexing/diskStructure"}},c=[{value:"What is Indexing?",id:"what-is-indexing",children:[],level:3},{value:"Why is it needed?",id:"why-is-it-needed",children:[],level:2},{value:"Other Stuff",id:"other-stuff",children:[],level:2}],d={toc:c},s="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(s,(0,r.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"introduction"},"Introduction"),(0,a.yg)("h3",{id:"what-is-indexing"},"What is Indexing?"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Way of sorting number of records on multiple fields"),(0,a.yg)("li",{parentName:"ul"},"Creating an index on a field => Creating a ",(0,a.yg)("em",{parentName:"li"},"data structure")," that holds ",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Field value "),(0,a.yg)("li",{parentName:"ul"},"Pointer to the record it relates to"))),(0,a.yg)("li",{parentName:"ul"},"Index is then sorted => Binary search"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Downside"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Requires additional space")))),(0,a.yg)("h2",{id:"why-is-it-needed"},"Why is it needed?"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Records can only be sorted on one field",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"For records that are not sorted",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Linear search => (N + 1) / 2 block accesses on average"))),(0,a.yg)("li",{parentName:"ul"},"Sorted Records",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Binary search => log2N block accesses")))))),(0,a.yg)("h2",{id:"other-stuff"},"Other Stuff"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Blocking Factor: Number of records that can be stored on one block"),(0,a.yg)("li",{parentName:"ul"},"Used to calculate number of blocks required to store table / index table")))}u.isMDXComponent=!0}}]);