"use strict";(self.webpackChunkliangzai_for_hire=self.webpackChunkliangzai_for_hire||[]).push([[6598],{5680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>m});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(n),y=a,m=u["".concat(c,".").concat(y)]||u[y]||p[y]||i;return n?r.createElement(m,l(l({ref:t},d),{},{components:n})):r.createElement(m,l({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=y;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},6931:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(8168),a=(n(6540),n(5680));const i={sidebar_position:2,sidebar_label:"Constructor / lifecycle"},l="Constructor and Lifecycle Methods",o={unversionedId:"Backend/Java/Executor Service/constructor-lifecycle",id:"Backend/Java/Executor Service/constructor-lifecycle",title:"Constructor and Lifecycle Methods",description:"Pool Size Terms",source:"@site/docs/Backend/Java/Executor Service/constructor-lifecycle.md",sourceDirName:"Backend/Java/Executor Service",slug:"/Backend/Java/Executor Service/constructor-lifecycle",permalink:"/docs/Backend/Java/Executor Service/constructor-lifecycle",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Constructor / lifecycle"},sidebar:"docs",previous:{title:"Callables & Futures",permalink:"/docs/Backend/Java/Executor Service/callables-futures"},next:{title:"JVM",permalink:"/docs/Backend/Java/JVM/"}},c=[{value:"Pool Size Terms",id:"pool-size-terms",children:[],level:2},{value:"Policies",id:"policies",children:[],level:2},{value:"Lifecycle Methods",id:"lifecycle-methods",children:[],level:2}],s={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"constructor-and-lifecycle-methods"},"Constructor and Lifecycle Methods"),(0,a.yg)("h2",{id:"pool-size-terms"},"Pool Size Terms"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Size"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Core Size"),(0,a.yg)("td",{parentName:"tr",align:null},"Core number of threads that are initialized and can remain in the threadpool even when idle")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Current Size"),(0,a.yg)("td",{parentName:"tr",align:null},"Current number of threads, starts as core size, more are added depending on the type of threadpool")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Max Size Size"),(0,a.yg)("td",{parentName:"tr",align:null},"Absolute maximum can handle concurrently")))),(0,a.yg)("h2",{id:"policies"},"Policies"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Policy"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"AbortPolicy"),(0,a.yg)("td",{parentName:"tr",align:null},"throws exception")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"DiscardPolicy"),(0,a.yg)("td",{parentName:"tr",align:null},"throws away task silently")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"DiscardOldestPolicy"),(0,a.yg)("td",{parentName:"tr",align:null},"submits new task and discards oldest task")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"CallerRunPolicy"),(0,a.yg)("td",{parentName:"tr",align:null},"caller thread runs the task")))),(0,a.yg)("div",{className:"admonition admonition-info alert alert--info"},(0,a.yg)("div",{parentName:"div",className:"admonition-heading"},(0,a.yg)("h5",{parentName:"div"},(0,a.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,a.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.yg)("div",{parentName:"div",className:"admonition-content"},(0,a.yg)("p",{parentName:"div"},"Note: The behavior of these policies applies when the maximum pool size or work queue capacity has been reached."))),(0,a.yg)("h2",{id:"lifecycle-methods"},"Lifecycle Methods"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"/* \n* Initiates shutdown\n* All tasks that are submitted thereafter are rejected\n* Will complete tasks in BlockingQueue before shutting down\n*/\nservice.shutdown()\n\n/*\n* Checks if ThreadPool has already shutdown\n*/\nservice.isShutdown() \n\n/*\n* Returns true if shutdown and all tasks completed\n*/\nservice.isTerminated()\n\n\n/*\n* Blocks until all tasks are completed or if timeout occurs\n*/\nservice.awaitTermination(10, TimeUnit.SECONDS);\n\n/*\n* Initiates shutdown and returns all queued tasks\n*/\nList<Runnable> runnables = service.shutdownNow()\n")))}u.isMDXComponent=!0}}]);