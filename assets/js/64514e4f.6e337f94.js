"use strict";(self.webpackChunkliangzai_for_hire=self.webpackChunkliangzai_for_hire||[]).push([[1140],{5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>d});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),g=p(t),f=a,d=g["".concat(c,".").concat(f)]||g[f]||m[f]||i;return t?r.createElement(d,l(l({ref:n},s),{},{components:t})):r.createElement(d,l({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=f;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[g]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6737:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(8168),a=(t(6540),t(5680));const i={sidebar_position:1,sidebar_label:"Reference"},l="VIM Reference",o={unversionedId:"Misc/VIM/reference",id:"Misc/VIM/reference",title:"VIM Reference",description:"Stuff that I keep forgetting",source:"@site/docs/Misc/VIM/reference.md",sourceDirName:"Misc/VIM",slug:"/Misc/VIM/reference",permalink:"/docs/Misc/VIM/reference",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Reference"},sidebar:"docs",previous:{title:"Miscellaneous",permalink:"/docs/Misc/"}},c=[{value:"Macros",id:"macros",children:[],level:3},{value:"Replacing text",id:"replacing-text",children:[],level:3},{value:"Mapping types",id:"mapping-types",children:[],level:2}],p={toc:c},s="wrapper";function g(e){let{components:n,...t}=e;return(0,a.yg)(s,(0,r.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"vim-reference"},"VIM Reference"),(0,a.yg)("div",{className:"admonition admonition-info alert alert--info"},(0,a.yg)("div",{parentName:"div",className:"admonition-heading"},(0,a.yg)("h5",{parentName:"div"},(0,a.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,a.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.yg)("div",{parentName:"div",className:"admonition-content"},(0,a.yg)("p",{parentName:"div"},"Stuff that I keep forgetting"))),(0,a.yg)("h3",{id:"macros"},"Macros"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Begin recording with q command"),(0,a.yg)("li",{parentName:"ol"},"Choose register (a-z)"),(0,a.yg)("li",{parentName:"ol"},"Edit however you want"),(0,a.yg)("li",{parentName:"ol"},"End recording with q command")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-vim"},"# On lines 5 -10\n:5,10norm! @a\n\n# Line 5 to end of file\n:5,$norm! @a\n\n# All lines\n:g/pattern/norm! @a\n\n\n# Visually selected lines\n:'<,'>norm! @a\n")),(0,a.yg)("h3",{id:"replacing-text"},"Replacing text"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-vi"},'# Replace the first occurrence of a pattern in a line\n:s/pattern/replacement/\n\n# Replace all occurrences of a pattern in a line\n:s/pattern/replacement/g\n\n# Replace from the current line to the end of the file\n:.,$s/pattern/replacement/g\n\n# Replace in the entire file\n:%s/pattern/replacement/g\n\n# Replace in a specific range of lines (e.g., line 5 to line 10)\n:5,10s/pattern/replacement/g\n\n# Replace with confirmation for each occurrence\n:%s/pattern/replacement/gc\n\n# Use \\ to escape special characters (e.g., . or *)\n:%s/escaped\\.pattern/replacement/g\n\n# Use & in the replacement to refer to the matched pattern\n:%s/pattern/replace with & and more/g\n\n# Make the search case-insensitive\n:%s/pattern/replacement/gi\n\n# Make the search case-sensitive (override the default setting)\n:%s/pattern/replacement/gI\n\n# Replace across multiple lines using \\n for new lines\n:%s/pattern\\nanother line/replacement/g\n\n# Replace "foo" with "bar" in the entire file\n:%s/foo/bar/g\n\n# Replace "hello" with "world" in lines 5 to 10, with confirmation\n:5,10s/hello/world/gc\n\n')),(0,a.yg)("h2",{id:"mapping-types"},"Mapping types"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Recursive (map)"),(0,a.yg)("td",{parentName:"tr",align:null},"If the result of this mapping exists as another mapping, Vim will execute that as well")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Non Recursive (noremap)"),(0,a.yg)("td",{parentName:"tr",align:null},"Vim will execute the result of this mapping as-is, without considering further mappings")))))}g.isMDXComponent=!0}}]);