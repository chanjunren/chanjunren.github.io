"use strict";(self.webpackChunkliangzai_for_hire=self.webpackChunkliangzai_for_hire||[]).push([[4066],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),g=r,y=d["".concat(s,".").concat(g)]||d[g]||p[g]||i;return n?a.createElement(y,l(l({ref:t},u),{},{components:n})):a.createElement(y,l({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},224:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(8168),r=(n(6540),n(5680));const i={sidebar_position:1,sidebar_label:"Domain Driven Design"},l="Domain-Driven Design",o={unversionedId:"Backend/Design/ddd",id:"Backend/Design/ddd",title:"Domain-Driven Design",description:"Domain-Driven Design is an approach to software development that centers on the business domain, its elements, and their interactions",source:"@site/docs/Backend/Design/ddd.md",sourceDirName:"Backend/Design",slug:"/Backend/Design/ddd",permalink:"/docs/Backend/Design/ddd",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Domain Driven Design"},sidebar:"docs",previous:{title:"Multi Column Indexes",permalink:"/docs/Backend/Database/Relational DB/Indexing/multiColumnIndexes"},next:{title:"Algorithms cheatsheet",permalink:"/docs/Backend/Rule Engine/summary"}},s=[{value:"When to use",id:"when-to-use",children:[],level:2},{value:"Core Layers",id:"core-layers",children:[{value:"Domain Layer",id:"domain-layer",children:[],level:3},{value:"Application Layer",id:"application-layer",children:[],level:3},{value:"Infrastructure Layer",id:"infrastructure-layer",children:[],level:3}],level:2}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"domain-driven-design"},"Domain-Driven Design"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Domain-Driven Design is an approach to software development that centers on the business domain, its elements, and their interactions"),(0,r.yg)("p",{parentName:"blockquote"},"It advocates modeling based on the reality of business as relevant to your use cases")),(0,r.yg)("h2",{id:"when-to-use"},"When to use"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Dealing with complex business processes / domains"),(0,r.yg)("li",{parentName:"ul"},"Large teams with multiple teams, where a common language / understanding is crucial"),(0,r.yg)("li",{parentName:"ul"},"Business rules and logic are complex and central to application functionality")),(0,r.yg)("h2",{id:"core-layers"},"Core Layers"),(0,r.yg)("h3",{id:"domain-layer"},"Domain Layer"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"The Domain layer is the heart of your business logic"),(0,r.yg)("p",{parentName:"blockquote"},"It represents the business concepts, rules, and logic specific to the problem domain your application is addressing")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Components"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Entities"),(0,r.yg)("td",{parentName:"tr",align:null},"Objects that have a distinct identity that runs through time and different states")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Value Objects"),(0,r.yg)("td",{parentName:"tr",align:null},"Objects that describe some characteristic or attribute but are not defined by a unique identity and are typically immutable")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Aggregates"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("ul",null,(0,r.yg)("li",null,"A cluster of domain objects (entities and value objects) that are treated as a single unit for data changes"),(0,r.yg)("li",null,"Each aggregate has a root and a boundary ")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Domain Services"),(0,r.yg)("td",{parentName:"tr",align:null},"Operations that belong to the domain model but don\u2019t naturally fit within a domain entity or value object")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Domain Events"),(0,r.yg)("td",{parentName:"tr",align:null},"Events that are significant within the domain")))),(0,r.yg)("h3",{id:"application-layer"},"Application Layer"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"The Application layer serves as a coordination layer, orchestrating the flow of data and the sequence of operations in the application"),(0,r.yg)("p",{parentName:"blockquote"},"It is concerned with the application's overall workflow but not with business rules or domain logic")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Component"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Application Services"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("ul",null,(0,r.yg)("li",null,"These services orchestrate domain objects to perform tasks"),(0,r.yg)("li",null,"They don't contain business logic themselves but coordinate domain layer objects to perform the business logic")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DTO"),(0,r.yg)("td",{parentName:"tr",align:null},"Objects that carry data between processes, often used to encapsulate the data that is transferred over the network")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"API interfaces"),(0,r.yg)("td",{parentName:"tr",align:null},"Interfaces that define the operations available to external clients")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Command, Query Responsibility Segregation (CQRS)"),(0,r.yg)("td",{parentName:"tr",align:null},"Separating the read (query) operations from the write (command) operations can be implemented in this layer")))),(0,r.yg)("h3",{id:"infrastructure-layer"},"Infrastructure Layer"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Implements functionality required by domain layer (persistence)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Data Access")),(0,r.yg)("li",{parentName:"ul"},"Integration with external services")))}d.isMDXComponent=!0}}]);