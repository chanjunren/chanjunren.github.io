"use strict";(self.webpackChunkliangzai_for_hire=self.webpackChunkliangzai_for_hire||[]).push([[3853],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>h});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=a,h=d["".concat(s,".").concat(g)]||d[g]||m[g]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4216:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(8168),a=(n(6540),n(5680));const i={sidebar_position:0,sidebar_label:"Rete Algorithm"},o="Rete Algorithm",l={unversionedId:"Backend/Rule Engine/Examples/rete-algorithm",id:"Backend/Rule Engine/Examples/rete-algorithm",title:"Rete Algorithm",description:"Generated by ChatGPT, leaving it here for my own reference",source:"@site/docs/Backend/Rule Engine/Examples/rete-algorithm.md",sourceDirName:"Backend/Rule Engine/Examples",slug:"/Backend/Rule Engine/Examples/rete-algorithm",permalink:"/docs/Backend/Rule Engine/Examples/rete-algorithm",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,sidebar_label:"Rete Algorithm"},sidebar:"docs",previous:{title:"Algorithms cheatsheet",permalink:"/docs/Backend/Rule Engine/summary"},next:{title:"Decision Tree",permalink:"/docs/Backend/Rule Engine/Examples/decision-tree"}},s=[{value:"Example Scenario",id:"example-scenario",children:[],level:3},{value:"Facts",id:"facts",children:[],level:3},{value:"How Rete Algorithm Works",id:"how-rete-algorithm-works",children:[{value:"Building the Rete Network",id:"building-the-rete-network",children:[],level:4},{value:"Adding Facts",id:"adding-facts",children:[],level:4},{value:"Nodes Evaluate Facts",id:"nodes-evaluate-facts",children:[],level:4},{value:"Propagation Through the Network",id:"propagation-through-the-network",children:[],level:4},{value:"Action Nodes",id:"action-nodes",children:[],level:4}],level:3},{value:"Efficiency",id:"efficiency",children:[],level:3}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.yg)(u,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"rete-algorithm"},"Rete Algorithm"),(0,a.yg)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.yg)("div",{parentName:"div",className:"admonition-heading"},(0,a.yg)("h5",{parentName:"div"},(0,a.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,a.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.yg)("div",{parentName:"div",className:"admonition-content"},(0,a.yg)("p",{parentName:"div"},"Generated by ChatGPT, leaving it here for my own reference"))),(0,a.yg)("h3",{id:"example-scenario"},"Example Scenario"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Imagine you have a rule engine for a pet store, and you're applying the following rules to determine discounts:"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Rule 1: If a customer buys more than 5 items, they get a 10% discount."),(0,a.yg)("li",{parentName:"ul"},"Rule 2: If a customer buys more than 10 items, they get a 15% discount.")))),(0,a.yg)("h3",{id:"facts"},"Facts"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Customer A buys 4 items."),(0,a.yg)("li",{parentName:"ul"},"Customer B buys 6 items."),(0,a.yg)("li",{parentName:"ul"},"Customer C buys 12 items.")),(0,a.yg)("h3",{id:"how-rete-algorithm-works"},"How Rete Algorithm Works"),(0,a.yg)("h4",{id:"building-the-rete-network"},"Building the Rete Network"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"When the rules are added to the system, the Rete algorithm constructs a network of nodes."),(0,a.yg)("li",{parentName:"ul"},"These nodes represent the conditions in the rules."),(0,a.yg)("li",{parentName:"ul"},'For our example, there might be nodes that represent the "number of items purchased" condition.')),(0,a.yg)("h4",{id:"adding-facts"},"Adding Facts"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"When a new fact (like a customer purchase) is introduced, it's passed through this network.")),(0,a.yg)("h4",{id:"nodes-evaluate-facts"},"Nodes Evaluate Facts"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},'Each node in the network evaluates the fact against its condition. For instance, a node might check, "Is the number of items greater than 5?"')),(0,a.yg)("h4",{id:"propagation-through-the-network"},"Propagation Through the Network"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"As the fact moves through the network, only paths where conditions are met are followed. ",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Customer A (4 items), neither rule is applicable, and the fact doesn't propagate to the action nodes."),(0,a.yg)("li",{parentName:"ul"},"Customer B (6 items), it meets the condition of Rule 1 but not Rule 2, so it propagates only to the action node of Rule 1."),(0,a.yg)("li",{parentName:"ul"},"Customer C (12 items), it meets both conditions and propagates to both action nodes.")))),(0,a.yg)("h4",{id:"action-nodes"},"Action Nodes"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"At the end of the network are action nodes."),(0,a.yg)("li",{parentName:"ul"},"If a fact reaches an action node, the corresponding action (like applying a discount) is executed.")),(0,a.yg)("h3",{id:"efficiency"},"Efficiency"),(0,a.yg)("p",null,"The Rete algorithm's strength lies in its ability to remember the outcomes of these condition checks. When a new fact is introduced, or an existing fact changes, not all conditions need to be re-evaluated. This makes it extremely efficient for scenarios where many facts are evaluated against a stable set of rules."))}d.isMDXComponent=!0}}]);